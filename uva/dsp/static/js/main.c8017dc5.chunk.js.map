{"version":3,"sources":["scripts/screens/Home.js","scripts/blocks/Posts.js","scripts/screens/Account.js","scripts/blocks/Users.js","scripts/screens/Overview.js","scripts/partials/Main.js","scripts/partials/Menu.js","scripts/App.js","index.js"],"names":["Home","window","scrollTo","id","className","to","type","href","height","data","key","series","colorScheme","Component","Posts","props","state","allLineData","allPieData","allBarData","allSentimentData","columns","Header","accessor","show","width","sortable","filterable","Cell","content","row","post_date","Date","toUTCString","post_content","filterMethod","filter","toLowerCase","indexOf","value","hate","user","user_topic","push","posts","map","el","date","month","getMonth","year","getFullYear","post_sentiment","length","mergeObjects","addMissingDates","sortObjects","arr","reduce","acc","item","found","find","obj","toString","sort","a","b","full","missing","Fragment","this","user_name","user_id","discrete","showPagination","defaultSorted","desc","Account","match","params","userObject","getUser","Users","console","log","users","Math","round","percentage_hate","Object","keys","i","Overview","getUsers","Main","exact","path","render","Menu","activeClassName","App","importData","fetch","then","res","json","setState","ReactDOM","document","getElementById"],"mappings":"qTAwGeA,E,YA7Fd,aAAe,uE,iFAKdC,OAAOC,SAAS,EAAG,K,+BAInB,OACC,0BAAMC,GAAG,QACR,yBAAKC,UAAU,aACd,4CACA,6cAOqC,6BAAM,6BAC1C,kBAAC,IAAD,CAAMC,GAAG,aAAY,4BAAQC,KAAK,SAASF,UAAU,mBAAhC,sBAIvB,yBAAKA,UAAU,mBACd,oCACA,qCAAU,0BAAMA,UAAU,yBAAhB,SACV,qCAAU,0BAAMA,UAAU,yBAAhB,WACV,4FAAiE,uBAAGG,KAAK,8IAAR,kBAAjE,4DACuD,uBAAGA,KAAK,yDAAR,kBADvD,0CAEqC,yCAFrC,oBAEuE,6CAGxE,yBAAKH,UAAU,mBACd,sDACA,wCAAa,0BAAMA,UAAU,yBAAhB,UACb,8dASD,yBAAKA,UAAU,mBACd,kDACA,kBAAC,WAAD,CACCI,OAAQ,IACRC,KAAM,CACJ,CACCC,IAAK,WACLD,KAAM,IAEP,CACCC,IAAK,UACLD,KAAM,IAEP,CACCC,IAAK,WACLD,KAAM,KAGTE,OACC,kBAAC,eAAD,CACCC,YAAa,CAAC,UAAW,UAAW,eAOvC,yOAMD,yBAAKR,UAAU,mBACd,+CACA,sCAAW,0BAAMA,UAAU,yBAAhB,OACX,2b,GApFcS,a,QC2QJC,G,mBAlQd,WAAYC,GAAQ,IAAD,EAsFlB,IAAK,IAAIL,KAtFS,qBAClB,4CAAMK,KAEDC,MAAQ,CAEZC,YAAa,CAAC,CACbP,IAAK,YACLD,KAAM,IAEP,CACCC,IAAK,aACLD,KAAM,KAGPS,WAAY,CAAC,CACZR,IAAK,cACLD,KAAM,GAEP,CACCC,IAAK,UACLD,KAAM,IAGPU,WAAY,GAEZC,iBAAkB,CAAC,CAClBV,IAAK,sBACLD,KAAM,IAEP,CACCC,IAAK,qBACLD,KAAM,IAEP,CACCC,IAAK,sBACLD,KAAM,KAEPY,QAAS,CAAC,CACTC,OAAQ,OACRC,SAAU,YACVC,MAAM,EACNC,MAAO,IACPC,UAAU,EACVC,YAAY,EACZC,KAAM,SAAAC,GACL,OAAGA,EAAQC,IAAIC,UACA,IAAIC,KAA6B,IAAxBH,EAAQC,IAAIC,WACXE,cAMvB,sBAKJ,CACCX,OAAQ,UACRC,SAAU,eACVC,MAAM,EACNE,UAAU,EACVC,YAAY,EACZvB,UAAW,aACXwB,KAAM,SAAAC,GACL,OAAOA,EAAQC,IAAII,cAEpBC,aAAc,SAACC,EAAQN,GACtB,OAAOA,EAAII,cAAgBJ,EAAII,aAAaG,cAAcC,QAAQF,EAAOG,MAAMF,gBAAiB,IAGlG,CACCf,OAAQ,WACRC,SAAU,OACVC,MAAM,EACNC,MAAO,IACPC,UAAU,EACVC,YAAY,EACZC,KAAM,SAAAC,GACL,OAAOA,EAAQC,IAAIU,KAAO,UAAY,kBAMzB,EAAKzB,MAAM0B,KAAKC,WAC/B,EAAK1B,MAAMG,WAAWwB,KACrB,CAACjC,IAAKA,EAAKD,KAAM,EAAKM,MAAM0B,KAAKC,WAAWhC,KAxF5B,OA4FlB,EAAKK,MAAM0B,KAAKG,MAAMC,KAAI,SAAAC,GACzB,IAAMC,EAAO,IAAIf,KAAoB,IAAfc,EAAGf,WACrBiB,EAAQD,EAAKE,WACbC,EAAOH,EAAKI,cAEhB,EAAKnC,MAAMC,YAAY,GAAGR,KAAKkC,KAC9B,CACCjC,IAAK,IAAIsB,KAAKkB,EAAMF,KAInBF,EAAGN,OACL,EAAKxB,MAAMC,YAAY,GAAGR,KAAKkC,KAC9B,CACCjC,IAAK,IAAIsB,KAAKkB,EAAMF,KAItB,EAAKhC,MAAME,WAAW,GAAGT,QAI1B,EAAKO,MAAMI,iBAAiB,GAAGX,KAAKkC,KACnC,CACCjC,IAAK,IAAIsB,KAAKkB,EAAMF,GAAQvC,KAAMqC,EAAGM,eAAH,MAIpC,EAAKpC,MAAMI,iBAAiB,GAAGX,KAAKkC,KACnC,CACCjC,IAAK,IAAIsB,KAAKkB,EAAMF,GAAQvC,KAAMqC,EAAGM,eAAH,KAIpC,EAAKpC,MAAMI,iBAAiB,GAAGX,KAAKkC,KACnC,CACCjC,IAAK,IAAIsB,KAAKkB,EAAMF,GAAQvC,KAAMqC,EAAGM,eAAH,SAKrC,EAAKpC,MAAME,WAAW,GAAGT,KAAQ,EAAKM,MAAM0B,KAAKG,MAAMS,OAAS,EAAK,EAAKrC,MAAME,WAAW,GAAGT,KAE9F,EAAKO,MAAMC,YAAY,GAAGR,KAAO,EAAK6C,aAAa,EAAKtC,MAAMC,YAAY,GAAGR,MAC7E,EAAKO,MAAMC,YAAY,GAAGR,KAAO,EAAK6C,aAAa,EAAKtC,MAAMC,YAAY,GAAGR,MAC7E,EAAKO,MAAMC,YAAY,GAAGR,KAAO,EAAK8C,gBAAgB,EAAKvC,MAAMC,YAAY,GAAGR,KAAM,EAAKO,MAAMC,YAAY,GAAGR,MAEhH,EAAKO,MAAMC,YAAY,GAAGR,KAAO,EAAK+C,YAAY,EAAKxC,MAAMC,YAAY,GAAGR,MAC5E,EAAKO,MAAMC,YAAY,GAAGR,KAAO,EAAK+C,YAAY,EAAKxC,MAAMC,YAAY,GAAGR,MAE5E,EAAKO,MAAMI,iBAAiB,GAAGX,KAAO,EAAK+C,YAAY,EAAKxC,MAAMI,iBAAiB,GAAGX,MACtF,EAAKO,MAAMI,iBAAiB,GAAGX,KAAO,EAAK+C,YAAY,EAAKxC,MAAMI,iBAAiB,GAAGX,MACtF,EAAKO,MAAMI,iBAAiB,GAAGX,KAAO,EAAK+C,YAAY,EAAKxC,MAAMI,iBAAiB,GAAGX,MAhJpE,E,0EAqJNgD,GACZ,OAAOA,EAAIC,QAAO,SAACC,EAAKC,GACvB,IAAIC,EAAQF,EAAIG,MAAK,SAAAC,GAAG,OAAIA,EAAIrD,IAAIsD,aAAeJ,EAAKlD,IAAIsD,cAO3D,MANqB,qBAAVH,GACVD,EAAKnD,KAAO,EACZkD,EAAIhB,KAAKiB,IAETC,EAAMpD,OAEAkD,IAET,M,kCAGWF,GACX,OAAOA,EAAIQ,MAAK,SAACC,EAAGC,GACnB,OAAO,IAAInC,KAAKkC,EAAExD,KAAO,IAAIsB,KAAKmC,EAAEzD,U,sCAItB0D,EAAMC,GACrB,OAAGA,EAAQhB,SAAWe,EAAKf,QAC1Be,EAAKvB,KAAI,SAAAC,GAEY,qBADRuB,EAAQP,MAAK,SAAAC,GAAG,OAAIA,EAAIrD,IAAIsD,aAAelB,EAAGpC,IAAIsD,eAE7DK,EAAQ1B,KAAK,CACZjC,IAAKoC,EAAGpC,IACRD,KAAM,OAIF4D,GAEAA,I,+BAKR,OACC,kBAAC,IAAMC,SAAP,KACC,iDAAuBC,KAAKxD,MAAM0B,KAAK+B,UAAvC,KAAoDD,KAAKxD,MAAM0B,KAAKgC,QAApE,KACA,yBAAKrE,UAAU,WACd,yBAAKA,UAAU,iBACd,mFACA,kBAAC,YAAD,CACCK,KAAM8D,KAAKvD,MAAMC,YACjByD,UAAU,EACV/D,OACC,kBAAC,aAAD,CACCL,KAAK,UACLM,YAAa,CAAC,UAAW,gBAK7B,yBAAKR,UAAU,gBACd,2DACA,kBAAC,WAAD,CACCK,KAAM8D,KAAKvD,MAAME,WACjBP,OACC,kBAAC,eAAD,CACCC,YAAa,CAAC,UAAW,gBAK7B,yBAAKR,UAAU,gBACd,4DACA,kBAAC,WAAD,CACCK,KAAM8D,KAAKvD,MAAMG,WACjBR,OACC,kBAAC,YAAD,CACCC,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,gBAKzE,yBAAKR,UAAU,iBACd,wDACA,kBAAC,6BAAD,CACCK,KAAM8D,KAAKvD,MAAMI,iBACjBsD,UAAU,EACV/D,OACC,kBAAC,8BAAD,CACCC,YAAa,CAAE,UAAU,UAAU,iBAQxC,yDAA+B2D,KAAKxD,MAAM0B,KAAK+B,UAA/C,KAA4DD,KAAKxD,MAAM0B,KAAKgC,QAA5E,KAEA,kBAAC,IAAD,CACCE,gBAAgB,EAChBlE,KAAM8D,KAAKxD,MAAM0B,KAAKG,MACtBjB,YAAY,EACZN,QAASkD,KAAKvD,MAAMK,QACpBuD,cAAe,CAAC,CACfzE,GAAI,YACJ0E,MAAM,W,GA3PQhE,cCwBLiE,E,YAnCd,WAAY/D,GAAQ,qEACbA,I,uEAGI,IAAD,OACT,GAAGwD,KAAKxD,MAAMN,MAAQ8D,KAAKxD,MAAMN,KAAK4C,QAAUkB,KAAKxD,MAAMgE,MAAMC,OAAO7E,GAAI,CAC3E,IAAI8E,EAAaV,KAAKxD,MAAMN,KAAKqD,MAAK,SAAAC,GAAG,OAAIA,EAAIU,SAAW,EAAK1D,MAAMgE,MAAMC,OAAO7E,MAEpF,OAAG8E,EAED,kBAAC,EAAD,CAAOxC,KAAMwC,IAKb,qDAKF,OACC,2C,+BAMF,OACC,0BAAM9E,GAAG,WACPoE,KAAKW,e,GA/BYrE,aCuGPsE,E,YAnGd,WAAYpE,GAAQ,IAAD,6BAClB,4CAAMA,IAENqE,QAAQC,IAAI,EAAKtE,MAAMuE,OAEvB,EAAKtE,MAAQ,CACZK,QAAS,CAAC,CACTC,OAAQ,UACRC,SAAU,UACVC,MAAM,EACNC,MAAO,GACPC,UAAU,EACVC,YAAY,EACZC,KAAM,SAAAC,GACL,OAAO,kBAAC,IAAD,CAAMxB,GAAE,eAAUwB,EAAQC,IAAI2C,UAAY5C,EAAQC,IAAI2C,WAG/D,CACCnD,OAAQ,WACRC,SAAU,YACVC,MAAM,EACNE,UAAU,EACVC,YAAY,EACZC,KAAM,SAAAC,GACL,OAAO,kBAAC,IAAD,CAAMxB,GAAE,eAAUwB,EAAQC,IAAI2C,UAAY5C,EAAQC,IAAI0C,YAE9DrC,aAAc,SAACC,EAAQN,GACtB,OAAOA,EAAI0C,WAAa1C,EAAI0C,UAAUnC,cAAcC,QAAQF,EAAOG,MAAMF,gBAAiB,IAG5F,CACCf,OAAQ,YACRC,SAAU,aACVC,MAAM,EACNC,MAAO,IACPC,UAAU,EACVC,YAAY,GAEb,CACCL,OAAQ,8BACRC,SAAU,kBACVC,MAAM,EACNC,MAAO,IACPC,UAAU,EACVC,YAAY,EACZC,KAAM,SAAAC,GACL,MAAM,GAAN,OAAU0D,KAAKC,MAAoC,IAA9B3D,EAAQC,IAAI2D,iBAAyB,IAA1D,OAGF,CACCnE,OAAQ,uBACRC,SAAU,aACVC,MAAM,EACNE,UAAU,EACVC,YAAY,EACZC,KAAM,SAAAC,GACL,IAAIpB,EAAOiF,OAAOC,KAAK9D,EAAQU,OAc/B,OAZA9B,EAAOA,EAAK2B,QAAO,SAACU,GACnB,OAA4B,GAArBjB,EAAQU,MAAMO,MACnBmB,MAAK,SAACC,EAAGC,GACX,OAAOtC,EAAQU,MAAM4B,GAAKtC,EAAQU,MAAM2B,OAGpCb,OAAS,GAEd5C,EAAOA,EAAKoC,KAAI,SAACC,EAAI8C,GACpB,OAAO,0BAAMxF,UAAU,WAAWM,IAAKkF,GAAhC,UAAuC9C,QAGnCO,QAAU5C,GAAQ,gBAE/B0B,aAAc,SAACC,EAAQN,GAEtB,OADAsD,QAAQC,IAAIK,OAAOC,KAAK7D,EAAIY,aACrBZ,EAAIY,YAAcZ,EAAIY,WAAWsB,WAAW3B,cAAcC,QAAQF,EAAOG,MAAMF,gBAAiB,MA1ExF,E,sEAkFlB,OACC,kBAAC,IAAMiC,SAAP,KACC,kBAAC,IAAD,CACCK,gBAAgB,EAChBlE,KAAM8D,KAAKxD,MAAMuE,MACjB3D,YAAY,EACZN,QAASkD,KAAKvD,MAAMK,QACpBuD,cAAe,CAAC,CACfzE,GAAI,UACJ0E,MAAM,W,GA5FQhE,aCyBLgF,E,YA1Bd,WAAY9E,GAAQ,qEACbA,I,wEAIN,OAAGwD,KAAKxD,MAAMN,MAAQ8D,KAAKxD,MAAMN,KAAK4C,OAEpC,kBAAC,EAAD,CAAOiC,MAAOf,KAAKxD,MAAMN,OAKzB,iD,+BAMF,OACC,0BAAMN,GAAG,YACPoE,KAAKuB,gB,GAtBajF,aCsBRkF,E,YAjBd,aAAe,uE,sEAIL,IAAD,OACR,OACC,yBAAK3F,UAAU,UACd,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACnF,GAAD,OAAW,kBAAC,EAAD,iBAAUA,EAAV,CAAiBN,KAAM,EAAKM,MAAMN,WAC3E,kBAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,YAAYC,OAAQ,SAACnF,GAAD,OAAW,kBAAC,EAAD,iBAAcA,EAAd,CAAqBN,KAAM,EAAKM,MAAMN,WACvF,kBAAC,IAAD,CAAOwF,KAAK,YAAYC,OAAQ,SAACnF,GAAD,OAAW,kBAAC,EAAD,iBAAaA,EAAb,CAAoBN,KAAM,EAAKM,MAAMN,iB,GAXlEI,aCSJsF,E,iLAZb,OACC,yBAAK/F,UAAU,UACd,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,8BAEJ,4BACC,wBAAID,UAAU,gBAAe,kBAAC,IAAD,CAASgG,gBAAgB,YAAY/F,GAAG,aAAxC,0B,GAPfQ,aCoCJwF,E,YA7Bd,aAAe,IAAD,8BACb,+CAEKrF,MAAQ,GACb,EAAKA,MAAMP,KAAO,GAClB,EAAK6F,aALQ,E,iLASPC,MAAM,eACVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CAAElG,KAAMiG,Q,sEAIrC,OACC,yBAAKtG,UAAU,SACd,kBAAC,IAAD,KACC,yBAAKA,UAAU,YACd,kBAAC,EAAD,OAGD,kBAAC,EAAD,CAAMK,KAAM8D,KAAKvD,MAAMP,a,GAvBVI,a,OCFlB+F,IAASV,OAAO,kBAAC,EAAD,MAASW,SAASC,eAAe,oB","file":"static/js/main.c8017dc5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport {\n\tPieChart,\n\tPieArcSeries\n} from 'reaviz'\n\nclass Home extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.scrollTo(0, 0)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<main id=\"home\">\n\t\t\t\t<div className=\"jumbotron\">\n\t\t\t\t\t<h1>Introduction</h1>\n\t\t\t\t\t<p>The Fascist Data Explorer is an exploratory tool to gain\n\t\t\t\t\t\tinsights into the radicalization of right wing forum users. It\n\t\t\t\t\t\tcombines natural language processing techniques, sentiment\n\t\t\t\t\t\tanalysis and topic modelling to give an overview of the\n\t\t\t\t\t\tnegativity, hatefulness and topics of single users or groups\n\t\t\t\t\t\tof users in right-wing extremist forums.\n\t\t\t\t\t\tBased on the Fascist Data Explorer behaviour of users can\n\t\t\t\t\t\tbe tracked and analysed by experts. <br /><br />\n\t\t\t\t\t\t<Link to=\"/overview\"><button type=\"button\" className=\"btn btn-primary\">Start exploring</button></Link>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<h1>Data</h1>\n\t\t\t\t\t<h2>Users <span className=\"badge badge-secondary\">1166</span></h2>\n\t\t\t\t\t<h2>Posts <span className=\"badge badge-secondary\">156895</span></h2>\n\t\t\t\t\t<p>We used leaked data from Iron March, a fascist social network <a href=\"https://www.bellingcat.com/resources/how-tos/2019/11/06/massive-white-supremacist-message-board-leak-how-to-access-and-interpret-the-data/\">(link to data)</a>.\n\t\t\t\t\tFurther, we used labelled data to train our classifier <a href=\"https://github.com/aitor-garcia-p/hate-speech-dataset\">(link to data)</a>.\n\t\t\t\t\tThe data contains the information of <b>1166 users</b> with a total of <b>156895 posts</b></p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<h1>Hate Speech Classifier</h1>\n\t\t\t\t\t<h2>F1 score <span className=\"badge badge-secondary\">0.434</span></h2>\n\t\t\t\t\t<p>The hate speech classifier utilizes the BERT model to classify posts or comments in as hate\n\t\t\t\t\t\tspeech or not.\n\t\t\t\t\t\tThe definition of hate speech and the training set for the classifier were obtained by the\n\t\t\t\t\t\tresearch of Gibert et al (2018).\n\t\t\t\t\t\tOn a hand labelled data from the Iron March dataset, the model reached an F1 score of 0.434.\n\t\t\t\t\t\tWhilst there are relatively little false positives, there is a substantial amount of false negatives\n\t\t\t\t\t\tpresent in the model.</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<h1>Sentiment Analysis</h1>\n\t\t\t\t\t<PieChart\n\t\t\t\t\t\theight={400}\n\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"Positive\",\n\t\t\t\t\t\t\t\t\tdata: 12\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"Neutral\",\n\t\t\t\t\t\t\t\t\tdata: 78\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"Negative\",\n\t\t\t\t\t\t\t\t\tdata: 10\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\tseries={\n\t\t\t\t\t\t\t<PieArcSeries\n\t\t\t\t\t\t\t\tcolorScheme={[\"#a9dc76\", \"#fc9867\", \"#ff6188\"]}\n\t\t\t\t\t\t\t\t// tooltip={\n\t\t\t\t\t\t\t\t// \t<TooltipArea disabled={true} />\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<p>The sentiment analysis is based on a pre-trained model from the NLTK-library in\n\t\t\t\t\t\tpython.\n\t\t\t\t\t\tThe sentiment model is used to sort out all non-English posts and evaluate the\n\t\t\t\t\t\tsentiment of every remaining post.</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<h1>Topic Modelling</h1>\n\t\t\t\t\t<h2>Topics <span className=\"badge badge-secondary\">11</span></h2>\n\t\t\t\t\t<p>To extract the topics of every post a dictionary of all vocabulary, used in the Iron March dataset\n\t\t\t\t\t\twas created. After stop-word and punctuation removal the posts were tokenized and\n\t\t\t\t\t\tstemmed. Following the topics were extracted via a latent dirichlet analysis (LDA).\n\t\t\t\t\t\tAfter an initial number of 30 topics, we narrowed the total topic-number down to 11 by\n\t\t\t\t\t\tclustering related topics together via their distance.</p>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nexport default Home;\n\nHome.propTypes = {\n\tdata: PropTypes.array\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tLineChart,\n\tLineSeries,\n\tPieChart,\n\tPieArcSeries,\n\tStackedNormalizedAreaSeries,\n\tStackedNormalizedAreaChart,\n\tBarChart,\n\tBarSeries\n} from 'reaviz';\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\n\nclass Posts extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t// Empty line data\n\t\t\tallLineData: [{\n\t\t\t\tkey: \"All posts\",\n\t\t\t\tdata: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: \"Hate posts\",\n\t\t\t\tdata: []\n\t\t\t}],\n\t\t\t// Empty pie data\n\t\t\tallPieData: [{\n\t\t\t\tkey: \"Not hateful\",\n\t\t\t\tdata: 0\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: \"Hateful\",\n\t\t\t\tdata: 0\n\t\t\t}],\n\t\t\t// Empty bar data\n\t\t\tallBarData: [],\n\t\t\t// Empty line data for sentiment\n\t\t\tallSentimentData: [{\n\t\t\t\tkey: \"Negative percentage\",\n\t\t\t\tdata: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: \"Neutral percentage\",\n\t\t\t\tdata: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: \"Positive percentage\",\n\t\t\t\tdata: []\n\t\t\t}],\n\t\t\tcolumns: [{\n\t\t\t\tHeader: 'Date',\n\t\t\t\taccessor: 'post_date',\n\t\t\t\tshow: true,\n\t\t\t\twidth: 300,\n\t\t\t\tsortable: true,\n\t\t\t\tfilterable: true,\n\t\t\t\tCell: content => {\n\t\t\t\t\tif(content.row.post_date) {\n\t\t\t\t\t\tlet dateObj = new Date(content.row.post_date * 1000);\n\t\t\t\t\t\tlet utcString = dateObj.toUTCString();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tutcString\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'No date specified'\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Content',\n\t\t\t\taccessor: 'post_content',\n\t\t\t\tshow: true,\n\t\t\t\tsortable: false,\n\t\t\t\tfilterable: true,\n\t\t\t\tclassName: 'is-content',\n\t\t\t\tCell: content => {\n\t\t\t\t\treturn content.row.post_content\n\t\t\t\t},\n\t\t\t\tfilterMethod: (filter, row) => {\n\t\t\t\t\treturn row.post_content && row.post_content.toLowerCase().indexOf(filter.value.toLowerCase()) >=0;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Hateful?',\n\t\t\t\taccessor: 'hate',\n\t\t\t\tshow: true,\n\t\t\t\twidth: 100,\n\t\t\t\tsortable: true,\n\t\t\t\tfilterable: true,\n\t\t\t\tCell: content => {\n\t\t\t\t\treturn content.row.hate ? 'hateful' : 'not hateful'\n\t\t\t\t}\n\t\t\t}]\n\t\t};\n\n\t\t// Bar Chart data\n\t\tfor (let key in this.props.user.user_topic) {\n\t\t\tthis.state.allBarData.push(\n\t\t\t\t{key: key, data: this.props.user.user_topic[key]}\n\t\t\t)\n\t\t}\n\n\t\tthis.props.user.posts.map(el => {\n\t\t\tconst date = new Date(el.post_date * 1000);\n\t\t\tlet month = date.getMonth();\n\t\t\tlet year = date.getFullYear();\n\n\t\t\tthis.state.allLineData[0].data.push(\n\t\t\t\t{\n\t\t\t\t\tkey: new Date(year, month)\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif(el.hate) {\n\t\t\t\tthis.state.allLineData[1].data.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: new Date(year, month)\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tthis.state.allPieData[1].data++\n\t\t\t}\n\t\t\t// Line chart sentiment\n\t\t\t// Adding the negative sentiment values\n\t\t\tthis.state.allSentimentData[0].data.push(\n\t\t\t\t{\n\t\t\t\t\tkey: new Date(year, month), data: el.post_sentiment[\"neg\"]\n\t\t\t\t}\n\t\t\t);\n\t\t\t// Adding the neutral sentiment values\n\t\t\tthis.state.allSentimentData[1].data.push(\n\t\t\t\t{\n\t\t\t\t\tkey: new Date(year, month), data: el.post_sentiment[\"ne\"]\n\t\t\t\t}\n\t\t\t);\n\t\t\t// Adding the positive sentiment values\n\t\t\tthis.state.allSentimentData[2].data.push(\n\t\t\t\t{\n\t\t\t\t\tkey: new Date(year, month), data: el.post_sentiment[\"pos\"]\n\t\t\t\t}\n\t\t\t)\n\t\t});\n\n\t\tthis.state.allPieData[0].data = (this.props.user.posts.length + 1) - this.state.allPieData[1].data;\n\n\t\tthis.state.allLineData[0].data = this.mergeObjects(this.state.allLineData[0].data);\n\t\tthis.state.allLineData[1].data = this.mergeObjects(this.state.allLineData[1].data);\n\t\tthis.state.allLineData[1].data = this.addMissingDates(this.state.allLineData[0].data, this.state.allLineData[1].data);\n\t\t// Sorting Line Data\n\t\tthis.state.allLineData[0].data = this.sortObjects(this.state.allLineData[0].data);\n\t\tthis.state.allLineData[1].data = this.sortObjects(this.state.allLineData[1].data);\n\t\t// Sorting Sentiment data\n\t\tthis.state.allSentimentData[0].data = this.sortObjects(this.state.allSentimentData[0].data);\n\t\tthis.state.allSentimentData[1].data = this.sortObjects(this.state.allSentimentData[1].data);\n\t\tthis.state.allSentimentData[2].data = this.sortObjects(this.state.allSentimentData[2].data);\n\n\t}\n\n\n\tmergeObjects(arr) {\n\t\treturn arr.reduce((acc, item) => {\n\t\t\tlet found = acc.find(obj => obj.key.toString() === item.key.toString());\n\t\t\t\tif (typeof found === \"undefined\") {\n\t\t\t\t\titem.data = 1\n\t\t\t\t\tacc.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tfound.data++;\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t[]);\n\t}\n\n\tsortObjects(arr) {\n\t\treturn arr.sort((a, b) => {\n\t\t\treturn new Date(a.key) - new Date(b.key);\n\t\t});\n\t}\n\n\taddMissingDates(full, missing) {\n\t\tif(missing.length !== full.length) {\n\t\t\tfull.map(el => {\n\t\t\t\tlet found = missing.find(obj => obj.key.toString() === el.key.toString())\n\t\t\t\tif(typeof found === \"undefined\") {\n\t\t\t\t\tmissing.push({\n\t\t\t\t\t\tkey: el.key,\n\t\t\t\t\t\tdata: 0\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn missing;\n\t\t} else {\n\t\t\treturn missing;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h4>Overview for user {this.props.user.user_name} ({this.props.user.user_id})</h4>\n\t\t\t\t<div className=\"b-chart\">\n\t\t\t\t\t<div className=\"b-chart__line\">\n\t\t\t\t\t\t<h5>Posts by user over time and hateful posts over time</h5>\n\t\t\t\t\t\t<LineChart\n\t\t\t\t\t\t\tdata={this.state.allLineData}\n\t\t\t\t\t\t\tdiscrete={true}\n\t\t\t\t\t\t\tseries={\n\t\t\t\t\t\t\t\t<LineSeries\n\t\t\t\t\t\t\t\t\ttype=\"grouped\"\n\t\t\t\t\t\t\t\t\tcolorScheme={[\"#78dce8\", \"#fc9867\"]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"b-chart__pie\">\n\t\t\t\t\t\t<h5>Percentage of hateful posts</h5>\n\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\tdata={this.state.allPieData}\n\t\t\t\t\t\t\tseries={\n\t\t\t\t\t\t\t\t<PieArcSeries\n\t\t\t\t\t\t\t\t\tcolorScheme={[\"#78dce8\", \"#fc9867\"]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"b-chart__pie\">\n\t\t\t\t\t\t<h5>Occurance of topics in posts</h5>\n\t\t\t\t\t\t<BarChart\n\t\t\t\t\t\t\tdata={this.state.allBarData}\n\t\t\t\t\t\t\tseries={\n\t\t\t\t\t\t\t\t<BarSeries\n\t\t\t\t\t\t\t\t\tcolorScheme={[\"#ff6188\", \"#fc9867\", \"#ffd866\", \"#a9dc76\", \"#78dce8\", \"#ab9df2\"]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"b-chart__line\">\n\t\t\t\t\t\t<h5>Post sentiment over time</h5>\n\t\t\t\t\t\t<StackedNormalizedAreaChart\n\t\t\t\t\t\t\tdata={this.state.allSentimentData}\n\t\t\t\t\t\t\tdiscrete={true}\n\t\t\t\t\t\t\tseries={\n\t\t\t\t\t\t\t\t<StackedNormalizedAreaSeries\n\t\t\t\t\t\t\t\t\tcolorScheme={[ \"#fc0303\",\"#fc9867\",\"#78dce8\"]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<h2>List of all posts by user {this.props.user.user_name} ({this.props.user.user_id})</h2>\n\n\t\t\t\t<ReactTable\n\t\t\t\t\tshowPagination={true}\n\t\t\t\t\tdata={this.props.user.posts}\n\t\t\t\t\tfilterable={true}\n\t\t\t\t\tcolumns={this.state.columns}\n\t\t\t\t\tdefaultSorted={[{\n\t\t\t\t\t\tid: \"post_date\",\n\t\t\t\t\t\tdesc: false\n\t\t\t\t\t}]}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default Posts;\n\nPosts.propTypes = {\n\tuser: PropTypes.object\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Posts from 'scripts/blocks/Posts';\n\nclass Account extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tgetUser() {\n\t\tif(this.props.data && this.props.data.length && this.props.match.params.id) {\n\t\t\tlet userObject = this.props.data.find(obj => obj.user_id == this.props.match.params.id)\n\n\t\t\tif(userObject) {\n\t\t\t\treturn (\n\t\t\t\t\t<Posts user={userObject} />\n\t\t\t\t)\n\t\t}\n\t\telse {\n\t\t\t\treturn (\n\t\t\t\t\t<p>This user doesnt exist</p>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<p>Loading...</p>\n\t\t\t)\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<main id=\"account\">\n\t\t\t\t{this.getUser()}\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nexport default Account;\n\n\nAccount.propTypes = {\n\tmatch: PropTypes.object,\n\tdata: PropTypes.array,\n\tuser: PropTypes.object\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nclass Users extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tconsole.log(this.props.users)\n\n\t\tthis.state = {\n\t\t\tcolumns: [{\n\t\t\t\tHeader: 'User ID',\n\t\t\t\taccessor: 'user_id',\n\t\t\t\tshow: true,\n\t\t\t\twidth: 75,\n\t\t\t\tsortable: true,\n\t\t\t\tfilterable: true,\n\t\t\t\tCell: content => {\n\t\t\t\t\treturn <Link to={`user/${content.row.user_id}`}>{content.row.user_id}</Link>\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Username',\n\t\t\t\taccessor: 'user_name',\n\t\t\t\tshow: true,\n\t\t\t\tsortable: true,\n\t\t\t\tfilterable: true,\n\t\t\t\tCell: content => {\n\t\t\t\t\treturn <Link to={`user/${content.row.user_id}`}>{content.row.user_name}</Link>\n\t\t\t\t},\n\t\t\t\tfilterMethod: (filter, row) => {\n\t\t\t\t\treturn row.user_name && row.user_name.toLowerCase().indexOf(filter.value.toLowerCase()) >=0;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Postcount',\n\t\t\t\taccessor: 'post_count',\n\t\t\t\tshow: true,\n\t\t\t\twidth: 150,\n\t\t\t\tsortable: true,\n\t\t\t\tfilterable: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Percentage of hateful posts',\n\t\t\t\taccessor: 'percentage_hate',\n\t\t\t\tshow: true,\n\t\t\t\twidth: 150,\n\t\t\t\tsortable: true,\n\t\t\t\tfilterable: false,\n\t\t\t\tCell: content => {\n\t\t\t\t\treturn `${Math.round(content.row.percentage_hate * 100) / 100}%`;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Subjects of interest',\n\t\t\t\taccessor: 'user_topic',\n\t\t\t\tshow: true,\n\t\t\t\tsortable: false,\n\t\t\t\tfilterable: false,\n\t\t\t\tCell: content => {\n\t\t\t\t\tlet data = Object.keys(content.value)\n\n\t\t\t\t\tdata = data.filter((el) => {\n\t\t\t\t\t\treturn content.value[el] != 0;\n\t\t\t\t\t}).sort((a, b) => {\n\t\t\t\t\t\treturn content.value[b] - content.value[a];\n\t\t\t\t\t})\n\n\t\t\t\t\tdata.length = 3;\n\n\t\t\t\t\tdata = data.map((el, i) => {\n\t\t\t\t\t\treturn <span className=\"is-topic\" key={i}>{`${el}`}</span>\n\t\t\t\t\t})\n\n\t\t\t\t\treturn data.length && data || 'No interests';\n\t\t\t\t},\n\t\t\t\tfilterMethod: (filter, row) => {\n\t\t\t\t\tconsole.log(Object.keys(row.user_topic));\n\t\t\t\t\treturn row.user_topic && row.user_topic.toString().toLowerCase().indexOf(filter.value.toLowerCase()) >=0;\n\t\t\t\t}\n\t\t\t}]\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<ReactTable\n\t\t\t\t\tshowPagination={true}\n\t\t\t\t\tdata={this.props.users}\n\t\t\t\t\tfilterable={true}\n\t\t\t\t\tcolumns={this.state.columns}\n\t\t\t\t\tdefaultSorted={[{\n\t\t\t\t\t\tid: \"user_id\",\n\t\t\t\t\t\tdesc: false\n\t\t\t\t\t}]}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default Users;\n\nUsers.propTypes = {\n\tusers: PropTypes.array\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Users from 'scripts/blocks/Users';\n\nclass Overview extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tgetUsers() {\n\t\tif(this.props.data && this.props.data.length) {\n\t\t\treturn (\n\t\t\t\t<Users users={this.props.data} />\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<p>Loading users...</p>\n\t\t\t)\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<main id=\"overview\">\n\t\t\t\t{this.getUsers()}\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nexport default Overview;\n\nOverview.propTypes = {\n\tdata: PropTypes.array\n}","import React, { Component } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport Home from 'scripts/screens/Home';\nimport Account from 'scripts/screens/Account';\nimport Overview from 'scripts/screens/Overview';\n\nclass Main extends Component {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"l-main\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" render={(props) => <Home {...props} data={this.props.data} />} />\n\t\t\t\t\t<Route exact path=\"/overview\" render={(props) => <Overview {...props} data={this.props.data} />} />\n\t\t\t\t\t<Route path=\"/user/:id\" render={(props) => <Account {...props} data={this.props.data} />}  />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Main;\n\nMain.propTypes = {\n\tdata: PropTypes.array\n}","import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nclass Menu extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"b-menu\">\n\t\t\t\t<h1><Link to=\"/\">Fascist Database Explorer</Link></h1>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"b-menu__item\"><NavLink activeClassName='is-active' to=\"/overview\"> View all users</NavLink></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Menu;","// Core\nimport React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Main from 'scripts/partials/Main';\nimport Menu from 'scripts/partials/Menu';\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {};\n\t\tthis.state.data = [];\n\t\tthis.importData();\n\t}\n\n\tasync importData() {\n\t\tawait fetch('./data.json')\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => this.setState({ data: json }));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"l-app\">\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<div className=\"l-header\">\n\t\t\t\t\t\t<Menu />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Main data={this.state.data} />\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\nApp.propTypes = {\n\tdata: PropTypes.array\n}","import 'react-app-polyfill/ie11';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'scripts/App';\nimport 'styles/main.scss';\n\nReactDOM.render(<App />, document.getElementById('app-container'));"],"sourceRoot":""}